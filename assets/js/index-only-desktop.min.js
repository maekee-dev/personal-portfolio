console.log("-> loading /index-only-desktop.min.js");import*as THREE from"./lib/three-js.min.js";import{OrbitControls}from"./lib/orbit-controls.min.js";const containerPano=document.getElementById("panoramic");let containerWidth=containerPano.offsetWidth,containerHeight=containerPano.offsetHeight;const scenePano=new THREE.Scene,cameraPano=new THREE.PerspectiveCamera(75,containerWidth/containerHeight,.1,1e3),rendererPano=new THREE.WebGLRenderer;rendererPano.setSize(containerWidth,containerHeight),containerPano.appendChild(rendererPano.domElement);const geometryPano=new THREE.SphereGeometry(500,60,40);geometryPano.scale(-1,1,1);const loader=new THREE.TextureLoader;let texture=loader.load("/assets/img/index/panoramic.jpeg");const materialPano=new THREE.MeshBasicMaterial({map:texture}),spherePano=new THREE.Mesh(geometryPano,materialPano);scenePano.add(spherePano),cameraPano.position.set(0,0,.1);const isTouch=window.matchMedia("(any-pointer: fine)").matches;let controls;isTouch&&(controls=new OrbitControls(cameraPano,rendererPano.domElement),controls.enableZoom=!1,controls.enablePan=!1,controls.rotateSpeed=.4);let lastTime=0;const rotationSpeed=1e-4,animatePanoramic=time=>{if(requestAnimationFrame(animatePanoramic),window.innerWidth<1024)return;const delta=time-lastTime;lastTime=time,spherePano.rotation.y+=1e-4*delta,isTouch&&controls.update(),rendererPano.render(scenePano,cameraPano)};animatePanoramic(0),window.addEventListener("resize",()=>{containerWidth=containerPano.offsetWidth,containerHeight=containerPano.offsetHeight,rendererPano.setSize(containerWidth,containerHeight),cameraPano.aspect=containerWidth/containerHeight,cameraPano.updateProjectionMatrix()});const infoSelector1=document.getElementById("about-me-item-1"),infoSelector2=document.getElementById("about-me-item-2"),infoSelector3=document.getElementById("about-me-item-3");infoSelector1.addEventListener("click",()=>transform1()),infoSelector2.addEventListener("click",()=>transform2()),infoSelector3.addEventListener("click",()=>transform3());const transform1=()=>{gsap.to(sphere.scale,1,{x:1.2,y:1.2,z:1.2}),gsap.to(torus1.scale,1,{x:.5,y:.5,z:.5}),gsap.to(torus2.scale,1,{x:.9,y:.9,z:.9}),sceneConfig.velocity=.002},transform2=()=>{gsap.to(sphere.scale,1,{x:1,y:1,z:1}),gsap.to(torus1.scale,1,{x:1,y:1,z:1}),gsap.to(torus2.scale,1,{x:1,y:1,z:1}),sceneConfig.velocity=.004},transform3=()=>{gsap.to(sphere.scale,1,{x:1.4,y:1.4,z:1.4}),gsap.to(torus1.scale,1,{x:.5,y:.7,z:.5}),gsap.to(torus2.scale,1,{x:.5,y:.5,z:.5}),sceneConfig.velocity=.006},container=document.getElementById("particles-container");let sceneConfig={sphere:{background:657930,color:2105376,radius:1,widthSegments:64,heightSegments:64},torus1:{background:657930,color:2105376,radius:1.3,tubeRadius:.1,radialSegments:32,tubolarSegments:100},torus2:{background:657930,color:2105376,radius:1.7,tubeRadius:.1,radialSegments:32,tubolarSegments:100},velocity:.004};const scene=new THREE.Scene,sphereGeometry=new THREE.SphereGeometry(sceneConfig.sphere.radius,sceneConfig.sphere.widthSegments,sceneConfig.sphere.heightSegments),sphereMaterial=new THREE.MeshBasicMaterial({color:sceneConfig.sphere.background}),sphere=new THREE.Mesh(sphereGeometry,sphereMaterial),sphereEdges=new THREE.EdgesGeometry(sphereGeometry),sphereLineMaterial=new THREE.LineBasicMaterial({color:sceneConfig.sphere.color}),sphereLines=new THREE.LineSegments(sphereEdges,sphereLineMaterial);sphere.add(sphereLines),scene.add(sphere);const torusGeometry1=new THREE.TorusGeometry(sceneConfig.torus1.radius,sceneConfig.torus1.tubeRadius,sceneConfig.torus1.radialSegments,sceneConfig.torus1.tubolarSegments),torusMaterial1=new THREE.MeshBasicMaterial({color:sceneConfig.torus1.background}),torus1=new THREE.Mesh(torusGeometry1,torusMaterial1),torusEdges1=new THREE.EdgesGeometry(torusGeometry1),torusLineMaterial1=new THREE.LineBasicMaterial({color:sceneConfig.torus1.color}),torusLines1=new THREE.LineSegments(torusEdges1,torusLineMaterial1);torus1.add(torusLines1),scene.add(torus1);const torusGeometry2=new THREE.TorusGeometry(sceneConfig.torus2.radius,sceneConfig.torus2.tubeRadius,sceneConfig.torus2.radialSegments,sceneConfig.torus2.tubolarSegments),torusMaterial2=new THREE.MeshBasicMaterial({color:sceneConfig.torus2.background}),torus2=new THREE.Mesh(torusGeometry2,torusMaterial2),torusEdges2=new THREE.EdgesGeometry(torusGeometry2),torusLineMaterial2=new THREE.LineBasicMaterial({color:sceneConfig.torus2.color}),torusLines2=new THREE.LineSegments(torusEdges2,torusLineMaterial2);torus2.add(torusLines2),scene.add(torus2);let camera=new THREE.PerspectiveCamera(75,1,.1,1e3);camera.position.z=3;let renderer=new THREE.WebGLRenderer({antialias:!0});renderer.setSize(container.offsetWidth,container.offsetWidth),renderer.setClearColor(0,0),container.appendChild(renderer.domElement),window.addEventListener("resize",()=>renderer.setSize(container.offsetWidth,container.offsetWidth));const animate=()=>{requestAnimationFrame(animate),window.innerWidth<1024||(sphere.rotation.y-=sceneConfig.velocity,sphere.rotation.z+=sceneConfig.velocity,torus1.rotation.y+=sceneConfig.velocity,torus1.rotation.x+=sceneConfig.velocity,torus2.rotation.z+=sceneConfig.velocity,torus2.rotation.x+=sceneConfig.velocity,renderer.render(scene,camera))};animate();